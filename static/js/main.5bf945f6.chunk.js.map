{"version":3,"sources":["components/QuestionBox.js","quizService/index.js","components/Result.js","components/Description.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionBox","questions","options","selected","correct","useState","answers","setAnswers","result","setResult","toggle","setToggle","className","map","answer","index","onClick","style","backgroundColor","color","padding","borderRadius","width","textAlign","qBank","id","description","state","capital","language","question","questionId","quizService","n","Promise","resolve","sort","Math","random","slice","Result","score","playAgain","total","Description","props","console","log","App","questionBank","showQuestions","showDescription","responses","showResult","handleResult","setState","getQuestions","then","computeAnswer","this","setTimeout","length","marginLeft","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bf945f6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../assets/style.css\";\r\nconst QuestionBox = ({ questions, options, selected, correct }) => {\r\n  const [answers, setAnswers] = useState(options);\r\n  const [result, setResult] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <div className=\"question\">{questions}</div>\r\n      {answers.map((answer, index) => (\r\n        <span>\r\n          <button\r\n            key={index}\r\n            className=\"answerBtn\"\r\n            onClick={() => {\r\n              setToggle(true);\r\n              if (answer == correct) {\r\n                setResult(true);\r\n              } else {\r\n                setResult(false);\r\n              }\r\n              setAnswers([answer]);\r\n\r\n              selected(answer);\r\n            }}\r\n          >\r\n            {answer}\r\n          </button>\r\n          <span>\r\n            {toggle ? (\r\n              result ? (\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"green\",\r\n                    color: \"wheat\",\r\n                    padding: \"10px\",\r\n                    borderRadius: \"10px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Correct Answer\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      color: \"wheat\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"10px\",\r\n                      width: \"30%\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Wrong Answer\r\n                  </div>\r\n\r\n                  <br />\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"cyan\",\r\n                      color: \"\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"10px\",\r\n                      width: \"30%\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Correct Answer is {correct}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </span>\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","const qBank = [\n  {\n    id: 1,\n    description: {\n      state: \"Tamil Nadu\",\n      capital: \"Chennai\",\n      language: \"Tamiz\",\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Tamil Nadu\",\n        answers: [\"Chennai\", \"Madurai\"],\n        correct: \"Chennai\",\n        questionId: \"1001\",\n      },\n      {\n        question: \"What is the language spoken in Tamil Nadu\",\n        answers: [\"Telugu\", \"Tamiz\"],\n        correct: \"Tamiz\",\n        questionId: \"1002\",\n      },\n    ],\n  },\n  {\n    id: 2,\n    description: {\n      state: \"Telangana\",\n      capital: \"hyderabad\",\n      language: \"Telugu\",\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Telangana\",\n        answers: [\"Mumbai\", \"Hyderabad\"],\n        correct: \"Hyderabad\",\n        questionId: \"2001\",\n      },\n      {\n        question: \"What is the language spoken in Telangana \",\n        answers: [\"Telugu\", \"Tamiz\"],\n        correct: \"Telugu\",\n        questionId: \"2002\",\n      },\n    ],\n  },\n  {\n    id: 3,\n    description: {\n      state: \"Kerala\",\n      capital: \"Thiruvananthapuram\",\n      language: \"Malayalam\",\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Kerala\",\n        answers: [\"Chennai\", \"Thiruvananthapuram\", \"Palakadu\"],\n        correct: \"Thiruvananthapuram\",\n        questionId: \"3001\",\n      },\n      {\n        question: \"What is the language spoken in Kerala\",\n        answers: [\"Telugu\", \"Malayalam\", \"Hindi\"],\n        correct: \"Malayalam\",\n        questionId: \"3002\",\n      },\n    ],\n  },\n];\n\nconst quizService = (n = 1) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n\nexport default quizService;\n","import React from \"react\";\n\nconst Result = ({ score, playAgain, total }) => (\n  <div className=\"score-board\">\n    <div className=\"score\">\n      You scored {score} / {total} correct answers!\n    </div>\n    <button className=\"playBtn\" onClick={playAgain}>\n      Play again!\n    </button>\n  </div>\n);\n\nexport default Result;\n","import React from \"react\";\r\nimport \"../assets/style.css\";\r\nfunction Description(props) {\r\n  console.log(props.description.state);\r\n  console.log(props.description.capital);\r\n  console.log(props.description.language);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h2 style={{ textAlign: \"center\" }}>Quiz Data</h2>\r\n      <br />\r\n      <div>\r\n        <div className=\"quizDataCard\">\r\n          <span className=\"quizData\">State</span>\r\n\r\n          <span className=\"quizData\">{props.description.state}</span>\r\n        </div>\r\n        <div className=\"quizDataCard\">\r\n          <span className=\"quizData\">Capital</span>\r\n          <span className=\"quizData\">{props.description.capital}</span>\r\n        </div>\r\n        <div className=\"quizDataCard\">\r\n          <span className=\"quizData\">Language</span>\r\n          <span className=\"quizData\">{props.description.language}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Description;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./assets/style.css\";\r\nimport QuestionBox from \"./components/QuestionBox\";\r\nimport quizService from \"./quizService\";\r\nimport Result from \"./components/Result\";\r\nimport Description from \"./components/Description\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    questionBank: [],\r\n    showQuestions: false,\r\n    showDescription: true,\r\n    score: 0,\r\n    responses: 0,\r\n    showResult: false,\r\n    description: {},\r\n  };\r\n  handleResult = () => {\r\n    this.setState({ responses: this.state.responses + 1 });\r\n  };\r\n  getQuestions = () => {\r\n    quizService().then((questions) => {\r\n      console.log(questions);\r\n      this.setState({\r\n        questionBank: questions[0].questions,\r\n        description: questions[0].description,\r\n      });\r\n    });\r\n  };\r\n\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({ score: 0, responses: 0 });\r\n  };\r\n\r\n  computeAnswer = (answer, correct) => {\r\n    this.setState({ responses: this.state.responses + 1 });\r\n\r\n    if (answer == correct) {\r\n      this.setState({ score: this.state.score + 1 });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n    setTimeout(() => {\r\n      this.setState({ showDescription: false, showQuestions: true });\r\n    }, 3000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\"> Quiz Master</div>\r\n        {this.state.showDescription && (\r\n          <Description description={this.state.description} />\r\n        )}\r\n\r\n        {this.state.showQuestions &&\r\n          this.state.questionBank.length > 0 &&\r\n          this.state.responses < this.state.questionBank.length + 1 &&\r\n          this.state.questionBank.map(\r\n            ({ question, answers, correct, questionId }) => (\r\n              <QuestionBox\r\n                questions={question}\r\n                options={answers}\r\n                key={questionId}\r\n                selected={(answer) => this.computeAnswer(answer, correct)}\r\n                correct={correct}\r\n              />\r\n            )\r\n          )}\r\n        {this.state.responses == this.state.questionBank.length && (\r\n          <button\r\n            className=\"answerBtn\"\r\n            style={{ marginLeft: \"50%\" }}\r\n            onClick={this.handleResult}\r\n          >\r\n            show results\r\n          </button>\r\n        )}\r\n\r\n        {this.state.responses == this.state.questionBank.length + 1 && (\r\n          <Result\r\n            score={this.state.score}\r\n            total={this.state.questionBank.length}\r\n            playAgain={this.playAgain}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}