{"version":3,"sources":["assets/kerala.png","quizService/index.js","assets/ap.jpeg","components/QuestionBox.js","components/Result.js","components/Description.js","components/StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["qBank","id","description","image","questions","question","answers","correct","questionId","kerala","QuestionBox","options","selected","useState","setAnswers","result","setResult","toggle","setToggle","className","map","answer","index","onClick","style","backgroundColor","color","padding","borderRadius","width","textAlign","Result","score","playAgain","total","level","life","nextLevel","reStart","Description","props","marginLeft","marginRight","display","src","height","StartPage","start","App","state","questionBank","showQuestions","showDescription","responses","showResult","count","getAllQuestions","console","log","handleResult","setState","getQuestions","a","newCount","setTimeout","computeAnswer","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac1b55b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kerala.b6021e5f.png\";","import kerala from \"../assets/kerala.png\";\nimport ap from \"../assets/ap.jpeg\";\nexport const qBank = [\n  {\n    id: 1,\n    description: {\n      image:\n        \"https://image.shutterstock.com/image-vector/tamil-nadu-districts-vector-map-260nw-1009413172.jpg\",\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Tamil Nadu\",\n        answers: [\"Chennai\", \"Madurai\"],\n        correct: \"Chennai\",\n        questionId: \"1001\",\n      },\n      {\n        question: \"What is the language spoken in Tamil Nadu\",\n        answers: [\"Telugu\", \"Tamiz\"],\n        correct: \"Tamiz\",\n        questionId: \"1002\",\n      },\n    ],\n  },\n  {\n    id: 2,\n    description: {\n      image: ap,\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Telangana\",\n        answers: [\"Mumbai\", \"Hyderabad\"],\n        correct: \"Hyderabad\",\n        questionId: \"2001\",\n      },\n      {\n        question: \"What is the language spoken in Telangana \",\n        answers: [\"Telugu\", \"Tamiz\"],\n        correct: \"Telugu\",\n        questionId: \"2002\",\n      },\n    ],\n  },\n  {\n    id: 3,\n    description: {\n      image: kerala,\n    },\n    questions: [\n      {\n        question: \"What is the Capital of Kerala\",\n        answers: [\"Chennai\", \"Thiruvananthapuram\", \"Palakadu\"],\n        correct: \"Thiruvananthapuram\",\n        questionId: \"3001\",\n      },\n      {\n        question: \"What is the language spoken in Kerala\",\n        answers: [\"Telugu\", \"Malayalam\", \"Hindi\"],\n        correct: \"Malayalam\",\n        questionId: \"3002\",\n      },\n    ],\n  },\n];\n\n// const quizService = (n = 1) =>\n//   Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n\n// export default quizService;\n","export default __webpack_public_path__ + \"static/media/ap.65690f2f.jpeg\";","import React, { useState } from \"react\";\r\nimport \"../assets/style.css\";\r\nconst QuestionBox = ({ questions, options, selected, correct }) => {\r\n  const [answers, setAnswers] = useState(options);\r\n  const [result, setResult] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <div className=\"question\">{questions}</div>\r\n      {answers.map((answer, index) => (\r\n        <span>\r\n          <button\r\n            key={index}\r\n            className=\"answerBtn\"\r\n            onClick={() => {\r\n              setToggle(true);\r\n              if (answer === correct) {\r\n                setResult(true);\r\n              } else {\r\n                setResult(false);\r\n              }\r\n              setAnswers([answer]);\r\n\r\n              selected(answer);\r\n            }}\r\n          >\r\n            {answer}\r\n          </button>\r\n          <span>\r\n            {toggle ? (\r\n              result ? (\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"green\",\r\n                    color: \"wheat\",\r\n                    padding: \"10px\",\r\n                    borderRadius: \"10px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Correct Answer\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      color: \"wheat\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"10px\",\r\n                      width: \"30%\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Wrong Answer\r\n                  </div>\r\n\r\n                  <br />\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"cyan\",\r\n                      color: \"\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"10px\",\r\n                      width: \"30%\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Correct Answer is {correct}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </span>\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","import React from \"react\";\n\nconst Result = ({\n  score,\n  playAgain,\n  total,\n  level,\n  life,\n  nextLevel,\n  reStart,\n}) => (\n  <div className=\"score-board\">\n    <div className=\"score0\">Total Life Available-->{life}</div>\n    <div className=\"score\">\n      You scored {score} / {total} correct answers!\n    </div>\n    {level == 4 ? (\n      <div className=\"score1\">Congragulations completed all the levels</div>\n    ) : score > 1 ? (\n      <div>\n        <div className=\"score1\"> Successfully completed this level</div>\n        <button className=\"playBtn\" onClick={nextLevel}>\n          Next Level\n        </button>\n      </div>\n    ) : life > 0 ? (\n      <div>\n        <div className=\"score1\">\n          {\" \"}\n          Sorry, Score above 2 to complete this level\n        </div>\n        <button className=\"playBtn\" onClick={playAgain}>\n          Play Again\n        </button>\n      </div>\n    ) : (\n      <button className=\"playBtn\" onClick={reStart}>\n        Restart the game\n      </button>\n    )}\n  </div>\n);\n\nexport default Result;\n","import React from \"react\";\r\nimport \"../assets/style.css\";\r\nfunction Description(props) {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h2 style={{ textAlign: \"center\" }}>Quiz Data</h2>\r\n      <br />\r\n      <div>\r\n        <div>\r\n          <img\r\n            style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"flex\" }}\r\n            src={props.description.image}\r\n            width=\"30%\"\r\n            height=\"30%\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport \"./startpage.css\";\r\n\r\nfunction StartPage(props) {\r\n  return (\r\n    <div>\r\n      <button className=\"playBtn\" onClick={props.start}>\r\n        START\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;\r\n","import React, { Component } from \"react\";\r\nimport { qBank } from \"./quizService/index\";\r\nimport \"./App.css\";\r\nimport \"./assets/style.css\";\r\nimport QuestionBox from \"./components/QuestionBox\";\r\n// import quizService from \"./quizService\";\r\nimport Result from \"./components/Result\";\r\nimport Description from \"./components/Description\";\r\nimport StartPage from \"./components/StartPage\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    questionBank: [\"a\"],\r\n    level: 1,\r\n    life: 3,\r\n    showQuestions: false,\r\n    showDescription: false,\r\n    score: 0,\r\n    start: true,\r\n    responses: 0,\r\n    showResult: false,\r\n    description: {},\r\n    count: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllQuestions();\r\n  }\r\n\r\n  getAllQuestions = () => {\r\n    console.log(\"all qns\", qBank);\r\n  };\r\n  handleResult = () => {\r\n    let life = this.state.life;\r\n    let level = this.state.level;\r\n    if (this.state.score > 1) {\r\n      level = level + 1;\r\n      life = life + 2;\r\n    } else {\r\n      life = life - 1;\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses + 1,\r\n      level: level,\r\n      life: life,\r\n    });\r\n  };\r\n  getQuestions = () => {\r\n    const { count } = this.state;\r\n    this.setState({\r\n      questionBank: qBank[count].questions,\r\n      description: qBank[count].description,\r\n    });\r\n  };\r\n\r\n  nextLevel = async () => {\r\n    const newCount = this.state.count < 2 ? this.state.count + 1 : 0;\r\n    console.log(\"newcount\", newCount);\r\n    await this.setState({\r\n      count: newCount,\r\n      start: false,\r\n      showDescription: true,\r\n      score: 0,\r\n      responses: 0,\r\n      showQuestions: false,\r\n    });\r\n    this.getQuestions();\r\n    setTimeout(() => {\r\n      this.setState({ showDescription: false, showQuestions: true });\r\n    }, 1000);\r\n  };\r\n\r\n  reStart = async () => {\r\n    await this.setState({\r\n      count: 0,\r\n      start: false,\r\n      showDescription: true,\r\n      score: 0,\r\n      responses: 0,\r\n      life: 3,\r\n      showQuestions: false,\r\n    });\r\n    this.getQuestions();\r\n    setTimeout(() => {\r\n      this.setState({ showDescription: false, showQuestions: true });\r\n    }, 1000);\r\n  };\r\n\r\n  playAgain = async () => {\r\n    await this.setState({\r\n      start: false,\r\n      showDescription: true,\r\n      score: 0,\r\n      responses: 0,\r\n      showQuestions: false,\r\n    });\r\n    this.getQuestions();\r\n    setTimeout(() => {\r\n      this.setState({ showDescription: false, showQuestions: true });\r\n    }, 3000);\r\n  };\r\n\r\n  start = () => {\r\n    this.getQuestions();\r\n    setTimeout(() => {\r\n      this.setState({ showDescription: false, showQuestions: true });\r\n    }, 3000);\r\n    this.setState({ start: false, showDescription: true });\r\n  };\r\n\r\n  computeAnswer = (answer, correct) => {\r\n    this.setState({ responses: this.state.responses + 1 });\r\n\r\n    if (answer === correct) {\r\n      this.setState({ score: this.state.score + 1 });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\"> Quiz Master</div>\r\n        {this.state.start && <StartPage start={this.start} />}\r\n\r\n        {this.state.showDescription && (\r\n          <Description description={this.state.description} />\r\n        )}\r\n\r\n        {this.state.showQuestions &&\r\n          this.state.questionBank.length > 0 &&\r\n          this.state.responses < this.state.questionBank.length + 1 &&\r\n          this.state.questionBank.map(\r\n            ({ question, answers, correct, questionId }) => (\r\n              <QuestionBox\r\n                questions={question}\r\n                options={answers}\r\n                key={questionId}\r\n                selected={(answer) => this.computeAnswer(answer, correct)}\r\n                correct={correct}\r\n              />\r\n            )\r\n          )}\r\n        {this.state.responses === this.state.questionBank.length && (\r\n          <button\r\n            className=\"answerBtn\"\r\n            style={{ marginLeft: \"50%\" }}\r\n            onClick={this.handleResult}\r\n          >\r\n            Show results\r\n          </button>\r\n        )}\r\n\r\n        {this.state.responses === this.state.questionBank.length + 1 && (\r\n          <Result\r\n            score={this.state.score}\r\n            total={this.state.questionBank.length}\r\n            playAgain={this.playAgain}\r\n            level={this.state.level}\r\n            life={this.state.life}\r\n            nextLevel={this.nextLevel}\r\n            reStart={this.reStart}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}